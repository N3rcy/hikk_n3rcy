import logging
import json
import requests

from .. import loader, utils

logger = logging.getLogger(__name__)

class TwitchDownloader(loader.Module):
    """Module for downloading Twitch stream replays"""
    async def twitchcmd(self, message):
        """
        .twitch https://www.twitch.tv/videos/1694800073 - Downloads the replay of the specified Twitch stream
        """
        # Get the URL of the stream to download
        stream_url = utils.get_args_raw(message)
        if not stream_url:
            await utils.answer(message, "ðŸš« Please provide a URL for the stream to download")
            return
        
        # Extract the video ID from the URL
        video_id = stream_url.split("/")[-1]
        
        # Make a request to the Twitch API to get the stream information
        api_url = f"https://api.twitch.tv/helix/videos?id={video_id}"
        headers = {"Client-ID": "YOUR_CLIENT_ID_HERE"}  # Replace with your own Client ID
        response = requests.get(api_url, headers=headers)
        
        # Check if the request was successful
        if response.status_code != 200:
            await utils.answer(message, "ðŸš« Could not get stream information from Twitch API")
            return
        
        # Parse the response from the API
        data = json.loads(response.text)
        if not data["data"]:
            await utils.answer(message, "ðŸš« Could not find a stream with the specified ID")
            return
        
        # Get the URL of the video file to download
        video_url = data["data"][0]["url"]
        
        # Download the video file
        video = requests.get(video_url)
        
        # Send the video file to the user
        await message.client.send_file(message.to_id, video.content)
