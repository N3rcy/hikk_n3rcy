from telethon.tl.types import Message
from .. import loader, utils

import asyncio

@loader.tds
class IrisLabMod(loader.Module):
    """Iris lab module with autoinfection mode"""

    strings = {
        "name": "Iris Lab",
        "autoinfect_on": "ðŸŸ¢ Autoinfection mode turned on. Sign: {}",
        "autoinfect_off": "ðŸ”´ Autoinfection mode turned off.",
        "autoinfect_message": "@iris_black_bot infect {}",
    }

    async def client_ready(self, client):
        self._db = client.session.get_repo(
            tgdata.HelperRepo, special_keys=("helper.session",)
        )
        self._client = client
        self._autoinfect = False
        self._sign = "+"

    async def autoinfectoncmd(self, message: Message):
        """<sign> - Turn on autoinfection mode with specified sign (+, -, =)"""
        args = utils.get_args_raw(message)
        if not args:
            await utils.answer(message, self.strings("autoinfect_on").format(self._sign))
        else:
            self._sign = args
            await utils.answer(message, self.strings("autoinfect_on").format(self._sign))
        self._autoinfect = True
        await self.autoinfect()

    async def autoinfectoffcmd(self, message: Message):
        """Turn off autoinfection mode"""
        self._autoinfect = False
        await utils.answer(message, self.strings("autoinfect_off"))

    async def autoinfect(self):
        while self._autoinfect:
            await self._client.send_message(
                "iris_black_bot", self.strings("autoinfect_message").format(self._sign)
            )
            await asyncio.sleep(36000) # sleep for 1 hour
