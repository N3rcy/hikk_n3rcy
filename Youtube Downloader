from telethon import events
from telethon.tl.types import Channel, Chat


@loader.tds
class NercyForwarder(loader.Module):
    """Module that forwards messages containing the text 'nercy' to a specified chat"""

    async def client_ready(self, client, db):
        self.client = client
        self.db = db
        self.nercy_id = None

    @loader.command()
    async def set_nercy_id(self, message: events.NewMessage.Event, id: str):
        """Sets the chat id to forward nercy messages to"""
        # Check if the id is valid
        try:
            entity = await self.client.get_entity(id)
            if not isinstance(entity, (Channel, Chat)):
                raise ValueError
        except ValueError:
            await message.edit("Invalid chat id")
            return

        self.nercy_id = id
        await message.edit(f"Nercy messages will now be forwarded to chat with id {id}")

    @loader.event(events.NewMessage)
    async def forward_nercy(self, event: events.NewMessage.Event):
        if not self.nercy_id:
            return

        if "nercy" in event.text.lower():
            # Forward the message to the specified chat
            await self.client.forward_messages(self.nercy_id, event.message, signature=f"\n\nFrom {event.sender.first_name} ({event.sender.id})")
